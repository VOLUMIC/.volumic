########################################
# VOLUMIC Macro configuration
########################################
[respond]
default_type: echo

[force_move]
enable_force_move: True

[gcode_macro _global_var]
variable_pause_park:{'x': 0, 'y': 0, 'z': 10, 'e': 1}
variable_cancel_park:{'x': 0, 'y': 350, 'z': 10, 'e': 1}
variable_z_maximum_lifting_distance: 345
variable_pause_resume_travel_speed: 150
variable_bed_mesh_calibrate_target_temp: 60
variable_load_filament_extruder_temp: 220
gcode:

[idle_timeout]
timeout: 300
gcode:
	{% if printer.pause_resume.is_paused == True %}
		#{% set ntemp = printer.extruder.temperature %}
		#{% if ntemp > 101 %}
		#	M104 S100
		#{% endif %}
		#M117 Extrudeur mis en veille...
	{% else %}
		M117 Timeout, arrêt des moteurs et des chauffes.
		TURN_OFF_HEATERS
		M84
		SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0.2 BLUE=0 SYNC=0 TRANSMIT=1
	{% endif %}

[gcode_macro _ALL_FAN_OFF]
gcode:
    M106 S0
    M107

[gcode_macro CLEAN_NOZZLE] 
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
       G28
    {% endif %}
    G90 
    G1 X348 Y0 Z0.3 F9000
    M117 Nozzle heating...
    M109 S200
    G91
    G1 Z10 F300
    G90
    M106 S255
    M104 S130
    M117 Clean nozzle
    G1 X315 Y360 F9000
    G1 Z0.2 F300
    G1 X352 F4500
    G1 Y360 X324
    G1 Y360 X345
    G1 Y360 X324
    G1 Y360 X345
    G1 Y360 X324
    G1 Y360 X345
    G1 Y360 X324
    G1 Y360 X345
    G1 Y360 X324
    G1 Y360 X325
    G1 Y356 X324 Z5
    G1 Z0.2
    G1 Y360 X324
    G1 Y357 X326
    G1 Y360 X326
    G1 Y357 X328
    G1 Y360 X330
    G1 Y357 X332
    G1 Y360 X334
    G1 Y357 X336
    G1 Y360 X338
    G1 Y357 X340
    G1 Y360 X324
    G1 Y357 X326
    G1 Y360 X326
    G1 Y357 X328
    G1 Y360 X330
    G1 Y357 X332
    G1 Y360 X334
    G1 Y357 X336
    G1 Y360 X338
    G1 Y357 X340
    G1 Y360 X324
    G1 Y357 X326
    G1 Y360 X326
    G1 Y357 X328
    G1 Y360 X330
    G1 Y357 X332
    G1 Y360 X334
    G1 Y357 X336
    G1 Y360 X338
    M400
    M117 Clean Finish
    M109 S130
    M107 
    G91
    G1 Z10 F300
    G90
    G28 Z0

[gcode_macro _CALIBRATION_ZOFFSET]
gcode:
    M117 Calibrate Offset
    QUAD_GANTRY_LEVEL
    M140 S65
    G4 P500
    CLEAN_NOZZLE
    G4 P500
    M117 zoffset calibration
    Z_OFFSET_CALIBRATION

[delayed_gcode _auto_zoffset]
gcode:
    SAVE_VARIABLE VARIABLE=offsetadjust VALUE={'%05.2f' % (0)}
    _CALIBRATION_ZOFFSET
    M23 /.zoffset_test.gcode
    M24

[gcode_macro _Delay_Calibrate]
gcode:
    UPDATE_DELAYED_GCODE ID=_auto_zoffset DURATION=1.0

[delayed_gcode TEST_BELT]
initial_duration: 0.3
gcode:
    {% set x_freq = printer.save_variables.variables.x_freq|float %}
    {% set y_freq = printer.save_variables.variables.y_freq|float %}
    {% set show_freq = printer.save_variables.variables.show_freq %}
    {% if show_freq == 1 %}
        M117 x {x_freq}, y {y_freq}
        SAVE_VARIABLE VARIABLE=show_freq VALUE=0
    {% endif %}

[gcode_macro PROBE_CALIBRATE]
rename_existing:PROBE_CALIBRATE_BASE
gcode:
    {% set current_target_temp  = printer.heater_bed.target|int %}
    {% set z_offset_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}

    {action_respond_info("z_offset_calibrate")}
    {% if printer.heater_bed.temperature != z_offset_calibrate_temp %}
        M140 S{z_offset_calibrate_temp}
        {action_respond_info("The bed target temperature was not reached!")}
        {action_respond_info("Bed heating...")}
        M190 S{z_offset_calibrate_temp}
    {% endif %}

    G28
    PROBE_CALIBRATE_BASE
    TESTZ z=-4

[gcode_macro G34]
gcode:
    BED_MESH_CLEAR 
    {% if printer.toolhead.homed_axes|lower != "xyz" %}
      G28
    {% else %}
      G28 Z
    {% endif %}
    QUAD_GANTRY_LEVEL 
    G28 Z 
    G0 X175 Y175 Z30 F3600

[delayed_gcode bed_mesh_init]
initial_duration: .01
gcode:
    BED_MESH_PROFILE LOAD=default

[gcode_macro START_PRINT]
description: 
variable_state: 'Prepare'
variable_record_extruder_temp:0
variable_max_record_extruder_temp:0
gcode:
	BED_MESH_PROFILE LOAD=default
	CLEAR_PAUSE
    {% if printer['filament_switch_sensor Detecteur_filament'].enable == True and printer['filament_switch_sensor Detecteur_filament'].filament_detected != True %}
      M117 Pas de filament présent !
      {action_respond_info("Chargez un filament avant l'impression.")}
      #CANCEL_PRINT
    {% endif %}
	M117 Demarrage
	M107
	{% if params.BED is defined %}
		{% set bedtemp = params.BED|default(0)|int %}
	{% else %}
		{% set bedtemp = 45 %}
	{% endif %}
	{% if params.EXTRUDER is defined %}
		{% set e0temp = params.EXTRUDER|default(0)|int %}
	{% else %}
		{% set e0temp = 200 %}
	{% endif %}
	M140 S{bedtemp}
	#M104 T0 S{e0temp}
	M104 T0 S170
	G90
	M82
	G28
	G92 E0
	G1 Z3 F800
	M400
	M117 Chauffe du lit
	M190 S{bedtemp}
    QUAD_GANTRY_LEVEL
    BED_MESH_CALIBRATE PROFILE=default
	M117 Chauffe de la tete
	M109 T0 S{e0temp}
	M400
	M117 Impression

[gcode_macro END_PRINT]
description: 
variable_state: 'normal'
gcode:
    {% set z_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance|int %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}
    M400
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Prepare"'
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=record_extruder_temp VALUE=0  
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=max_record_extruder_temp VALUE=0
    M117 Impression terminée
    G91
    {% if printer['filament_switch_sensor Detecteur_filament'].enable == True and
          printer['filament_switch_sensor Detecteur_filament'].filament_detected == True
    %}
        {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target) or
              printer.extruder.temperature >= e_mintemp
        %}
            G1 E-2 F2700
            G1 E-2 Z0.2 F2400
        {% endif %}
    {% endif %}
    {% if (printer.gcode_move.position.z + 10) < z_max %}
        G1 Z+10 F3000
    {% else %}
        G1 Z+{(z_max - printer.gcode_move.position.z)} F3000
    {% endif %}
    G90
    G1 X0 Y360 F9000
    _ALL_FAN_OFF
    TURN_OFF_HEATERS
    M84 X Y Z E  
    M220 S100
    M221 S100
    CLEAR_PAUSE
    {action_respond_info("Impression terminée")}


[gcode_macro CANCEL_PRINT]
description: 
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set x_park = printer['gcode_macro _global_var'].cancel_park.x|float %}
    {% set y_park = printer['gcode_macro _global_var'].cancel_park.y|float %}
    {% set z_park = printer['gcode_macro _global_var'].cancel_park.z|float %}
    {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}
    {% set e_restract = printer['gcode_macro _global_var'].cancel_park.e|float %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}
    CANCEL_PRINT_BASE
    M117 Impression annulée
    G91
    {% if printer['filament_switch_sensor Detecteur_filament'].enabled == True and 
          printer['filament_switch_sensor Detecteur_filament'].filament_detected == True
    %}
        {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target) or
              printer.extruder.temperature >= e_mintemp
        %}
            G1 E-{e_restract} F500
        {% else %}
            {action_respond_info("Nozzle not hot enough")}
        {% endif %}
    {% endif %}
    {%if (printer.gcode_move.position.z + 10) < z_lift_max %}
        G1 Z+10 F3000
    {% else %}
        G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
    {% endif %}
        G90
        G1 X{x_park} Y{y_park} F9000
    TURN_OFF_HEATERS
    _ALL_FAN_OFF
    CLEAR_PAUSE
    M84 X Y Z E
    M117 Ready
    {action_respond_info("Impression annulée")}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Prepare"'
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=record_extruder_temp VALUE=0  
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=max_record_extruder_temp VALUE=0


[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
variable_state: 'normal'
gcode:
    {% if printer.pause_resume.is_paused == False %}
        {% set x_park = printer['gcode_macro _global_var'].pause_park.x|float %}
        {% set y_park = printer['gcode_macro _global_var'].pause_park.y|float %}
        {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
        {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}
        {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}
        {action_respond_info("Pause impression")}
        PAUSE_BASE
        M117 Pause impression
        G91
        {% if (printer.gcode_move.position.z + 5) < z_lift_max %}
            G1 Z+5 F3000
        {% else %}
            G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
        {% endif %}
        G90
        {% if printer.gcode_move.position.x != x_park and
                printer.gcode_move.position.y != y_park     
        %}
            G1 X{x_park} Y{y_park} F{printer["gcode_macro _global_var"].pause_resume_travel_speed * 60}
        {% endif %}
        M104 S{printer.extruder.target}
        {% if state == 'normal' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                {% if printer['filament_switch_sensor Detecteur_filament'].enabled == True and 
                    printer['filament_switch_sensor Detecteur_filament'].filament_detected == True
                %}
                    G91
                    G1 E-{e_restract} F300
                    G90
                {% elif printer['filament_switch_sensor Detecteur_filament'].enabled == True and 
                        printer['filament_switch_sensor Detecteur_filament'].filament_detected != True %}
                    G91
                    G1 E+95 F300
                    G1 E-10 F1500
                    G1 E-20 F600
                    M400
                    G4 P3000
                    G1 E-50 F300 
                    G90
                {% endif %}
            {% endif %}
        {% elif state == 'filament_change' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                G91
                G1 E+25 F300
                G1 E-10 F1500
                G1 E-20 F600
                M400
                G4 P3000
                G1 E-50 F300 
                G90
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro RESUME]
description: Pause the actual running print
rename_existing: RESUME_BASE
variable_state: 'normal'
gcode:
    {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
    {% set extruder_target_temp = printer.extruder.target|int %}

    {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}

    {% if state == 'filament_change' %}
        {% if printer["filament_switch_sensor Detecteur_filament"].enable == True and
              printer["filament_switch_sensor Detecteur_filament"].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {% if printer.extruder.temperature + 5 >= printer.extruder.target %}
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% else %}
                M104 S{extruder_target_temp}
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_target_temp}
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% endif %}
            {action_respond_info("Print resumming!")}
            RESUME_BASE
        {% endif %}
    {% elif state == 'normal' %}
        {% if printer['filament_switch_sensor Detecteur_filament'].enable != True and
              printer['filament_switch_sensor Detecteur_filament'].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {action_respond_info("Print resumming!")}
            G91
            G1 E{e_restract} F300
            G90
            M117 Printing now!!!
            RESUME_BASE
        {% endif %}
    {% endif %}


[gcode_macro LOAD_FILAMENT]
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}
	{% if printer.pause_resume.is_paused == False %}
		M109 S220
	{% endif %}
	{% set ntemp = printer.extruder.temperature %}
	{% if ntemp < 170 %}
		M109 S220
	{% endif %}
	M400
	M83
	G92 E0.0
	G0 E150 F300
	G92 E0.0
	M82
	{% if printer.pause_resume.is_paused == False %}
		M84
	{% endif %}
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}
	{% if printer.pause_resume.is_paused == False %}
		M109 S220
	{% endif %}
	{% set ntemp = printer.extruder.temperature %}
	{% if ntemp < 170 %}
		M109 S220
	{% endif %}
	M400
	M83
	G92 E0.0
	G0 E6 F360
	G0 E-160 F600
	G92 E0.0
	M82
	{% if printer.pause_resume.is_paused == False %}
		M84
	{% endif %}

[gcode_macro M109]
rename_existing: M99109
gcode:    
    {% set s = params.S|float %}    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-1} MAXIMUM={s+1}   
    {% endif %}
    
[gcode_macro M190]

rename_existing: M99190
gcode:    
    {% set s = params.S|float %}
    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-1} MAXIMUM={s+1}  
    {% endif %}

[gcode_macro M106]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    SET_FAN_SPEED FAN={'Ventilateur_arriere'} SPEED={speed}
    SET_FAN_SPEED FAN={'Ventilateur_avant'} SPEED={speed}
    
[gcode_macro M107]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    SET_FAN_SPEED FAN={'Ventilateur_arriere'} SPEED=0
    SET_FAN_SPEED FAN={'Ventilateur_avant'} SPEED=0
    
[gcode_macro M600]
gcode:
    PAUSE STATE=filament_change

[gcode_macro CHANGEMENT_FILAMENT]
description: Changer le filament durant l'impression.
gcode:
	M600

[gcode_macro CHARGER_FILAMENT]
description: Charger un filament en chauffant la tête puis en extrudant 150mm de fil à 220°C.
gcode:
	LOAD_FILAMENT

[gcode_macro EJECTER_FILAMENT]
description: Ejecter le filament en chauffant la tête puis en retractant.
gcode:
	UNLOAD_FILAMENT

[gcode_macro ETALONNAGE_LIT]
description: Etalonnage complet du lit.
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Etalonnage du lit"
    RESPOND TYPE=command MSG="action:prompt_text Etalonner à quel température ?"
    RESPOND TYPE=command MSG="action:prompt_footer_button A FROID|ETALONNAGE_SURFACE TEMPERATURE_LIT=0|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button A 50°C|ETALONNAGE_SURFACE TEMPERATURE_LIT=50|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button A 60°C|ETALONNAGE_SURFACE TEMPERATURE_LIT=60|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button A 90°C|ETALONNAGE_SURFACE TEMPERATURE_LIT=90|primary"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro ETALONNAGE_SURFACE]
description: Etalonnage de Surface du lit.
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
	G28
	{% if params.TEMPERATURE_BUSE is defined %}
		M104 T0 S{params.TEMPERATURE_BUSE|int}
	{% else %}
		M104 T0 S160
	{% endif %}
	{% if params.TEMPERATURE_LIT is defined %}
		M117 Chauffage du lit
		M190 S{params.TEMPERATURE_LIT|int}
	{% endif %}
	M400
	M117 Etalonnage parallelisme
	QUAD_GANTRY_LEVEL
	M117 Etalonnage de surface
	BED_MESH_CALIBRATE PROFILE=default
	TURN_OFF_HEATERS
	G0 Z50 F900
	M117 Etalonnage terminee
	M400
	SAVE_CONFIG

[gcode_macro CALIBRATION_PID_TETE]
description: Calibration de la chauffe de la tête (PID : important).
gcode:
	{% if params.TEMPERATURE_BUSE is defined %}
		PID_CALIBRATE HEATER=extruder TARGET={params.TEMPERATURE_BUSE|int}
	{% else %}
		PID_CALIBRATE HEATER=extruder TARGET=230
	{% endif %}
	M117 Calibration du PID de la tete en cours, veuillez patienter...
	SAVE_CONFIG

[gcode_macro CALIBRATION_PID_LIT]
description: Calibration de la chauffe du lit (PID : important).
gcode:
	M117 Calibration de la chauffe du lit en cours, veuillez patienter...
	PID_CALIBRATE HEATER=heater_bed TARGET=80
	SAVE_CONFIG

[gcode_macro COUPER_LES_CHAUFFES]
description: Coupe toutes les chauffes extrudeur et lit.
gcode:
	TURN_OFF_HEATERS

[gcode_macro ETEINDRE_MOTEURS]
description: Eteindre les moteurs qui sont sous tension.
gcode:
	M84

[gcode_macro M117]
rename_existing: M117.1
gcode:
	{% if rawparams %}
		{% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
		SET_DISPLAY_TEXT MSG="{escaped_msg}"
		RESPOND TYPE=command MSG="{escaped_msg}"
	{% else %}
		SET_DISPLAY_TEXT
	{% endif %}
    UPDATE_DELAYED_GCODE ID=M117_CLEAR DURATION=120

[delayed_gcode M117_CLEAR]
gcode:
    SET_DISPLAY_TEXT MSG=""
    
[gcode_macro SAVE_CONFIG]
rename_existing: SAVE_CONFIG_BASE
gcode:
	FIRMWARE_RESTART
	SAVE_CONFIG_BASE

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[pause_resume]

[display_status]

[exclude_object]

[save_variables]
filename =/home/sovol/printer_data/config/saved_variables.cfg
