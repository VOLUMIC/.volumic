########################################
# VOLUMIC Macro configuration
########################################
[respond]
default_type: echo

[gcode_arcs]
resolution: 1.0

[gcode_macro START_PRINT]
description: Start a new running print
gcode:
	BED_MESH_PROFILE LOAD=default
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0 BLUE=1 SYNC=0 TRANSMIT=1
	SET_GCODE_VARIABLE MACRO=M600 VARIABLE=m600pending VALUE=0
	CLEAR_PAUSE
	M117 Demarrage
	M107
	{% if params.BED is defined %}
		{% set bedtemp = params.BED|default(0)|int %}
	{% else %}
		{% set bedtemp = 45 %}
	{% endif %}
	{% if params.EXTRUDERHAUT is defined %}
		{% set e0temp = params.EXTRUDERHAUT|default(0)|int %}
	{% else %}
		{% set e0temp = 200 %}
	{% endif %}
	{% if params.EXTRUDERBAS is defined %}
		{% set e1temp = params.EXTRUDERBAS|default(0)|int %}
	{% else %}
		{% set e1temp = 190 %}
	{% endif %}
	{% if params.EXTRUDER is defined %}
		{% set e0temp = params.EXTRUDER|default(0)|int-20 %}
		{% set e1temp = params.EXTRUDER|default(0)|int %}
	{% endif %}
	M140 S{bedtemp}
	M104 T0 S170
	SET_HEATER_TEMPERATURE HEATER=extruder_bas TARGET=170
	G90
	M82
	G28
	G92 E0
	G1 Z3 F800
	M400
	SET_LED LED="Eclairage_LEDs" RED=1 GREEN=0.23 BLUE=0 SYNC=0 TRANSMIT=1
	{% if params.WAITBED is defined %}
		M117 Chauffe du lit
		M190 S{bedtemp}
	{% endif %}
	M117 Chauffe de la tete
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={e0temp}
	SET_HEATER_TEMPERATURE HEATER=extruder_bas TARGET={e1temp}
	#M109 T0 S{e0temp}
	TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={e0temp-5} MAXIMUM={e0temp+5}
	TEMPERATURE_WAIT SENSOR="heater_generic extruder_bas" MINIMUM={e1temp-5} MAXIMUM={e1temp+5}
	M400
	SET_LED LED="Eclairage_LEDs" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
	M117 Impression

[gcode_macro END_PRINT]
gcode:
	TURN_OFF_HEATERS
	M107
	{% set maxY = printer.configfile.config.stepper_y.position_max %}
	G1 X0 Y{maxY} F21000
	M84
	M400
	SET_GCODE_VARIABLE MACRO=M600 VARIABLE=m600pending VALUE=0
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=1 BLUE=0 SYNC=0 TRANSMIT=1
	M117 Impression terminee

[delayed_gcode PAUSEPELLETS]
initial_duration: 0
gcode:
	{% set sysstate = printer["virtual_sdcard"] %}
	{% if sysstate.is_active == True %}
		PAUSE
	{% endif %}

[filament_switch_sensor Detecteur_filament]
pause_on_runout: False
runout_gcode:
	UPDATE_DELAYED_GCODE ID=PAUSEPELLETS DURATION=20
insert_gcode:
	UPDATE_DELAYED_GCODE ID=PAUSEPELLETS DURATION=0

[gcode_macro T0]
description: Avoid a warning if slicer put T0 in gcode
gcode: 

[gcode_macro M600]
description: GCODE de pause impression (compatibilité)
variable_m600pending: 0
gcode: 
	PAUSE

[gcode_macro M601]
description: GCODE de pause impression (compatibilité)
gcode: 
	PAUSE

[gcode_macro M300]
description: GCODE de beep (compatibilité)
gcode: {action_respond_info("BEEP")}

[gcode_macro CHANGEMENT_FILAMENT]
description: Changer le filament durant l'impression.
gcode:
	PAUSE

[gcode_macro CHARGER_FILAMENT]
description: Charger un filament en chauffant la tête puis en extrudant 150mm de fil.
gcode:
	LOAD_FILAMENT

[gcode_macro CHARGER_PELLETS]
description: Extruder des pellets.
gcode:
	LOAD_FILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
	SET_LED LED="Eclairage_LEDs" RED=1 GREEN=0.23 BLUE=0 SYNC=0 TRANSMIT=1
	{% if printer.pause_resume.is_paused == False %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
		SET_HEATER_TEMPERATURE HEATER=extruder_bas TARGET=220
		TEMPERATURE_WAIT SENSOR="extruder" MINIMUM=195 MAXIMUM=205
		TEMPERATURE_WAIT SENSOR="heater_generic extruder_bas" MINIMUM=215 MAXIMUM=225
	{% endif %}
	{% set ntemp = printer.extruder.temperature %}
	{% if ntemp < 170 %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
		SET_HEATER_TEMPERATURE HEATER=extruder_bas TARGET=220
		TEMPERATURE_WAIT SENSOR="extruder" MINIMUM=195 MAXIMUM=205
		TEMPERATURE_WAIT SENSOR="heater_generic extruder_bas" MINIMUM=215 MAXIMUM=225
	{% endif %}
	M400
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0 BLUE=1 SYNC=0 TRANSMIT=1
	M83
	G92 E0.0
	G0 E1000 F900
	G92 E0.0
	M82
	{% if printer.pause_resume.is_paused == False %}
		M84
	{% endif %}
	M400
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=1 BLUE=0 SYNC=0 TRANSMIT=1

[gcode_macro EJECTER_FILAMENT]
description: Ejecter le filament en chauffant la tête puis en retractant.
gcode:
	UNLOAD_FILAMENT

[gcode_macro RETRACT_PELLETS]
description: Retracter la vis de l'extrudeur.
gcode:
	UNLOAD_FILAMENT

[gcode_macro UNLOAD_FILAMENT]
gcode:
	SET_LED LED="Eclairage_LEDs" RED=1 GREEN=0.23 BLUE=0 SYNC=0 TRANSMIT=1
	{% if printer.pause_resume.is_paused == False %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
		SET_HEATER_TEMPERATURE HEATER=extruder_bas TARGET=220
		TEMPERATURE_WAIT SENSOR="extruder" MINIMUM=195 MAXIMUM=205
		TEMPERATURE_WAIT SENSOR="heater_generic extruder_bas" MINIMUM=215 MAXIMUM=225
	{% endif %}
	{% set ntemp = printer.extruder.temperature %}
	{% if ntemp < 170 %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
		SET_HEATER_TEMPERATURE HEATER=extruder_bas TARGET=220
		TEMPERATURE_WAIT SENSOR="extruder" MINIMUM=195 MAXIMUM=205
		TEMPERATURE_WAIT SENSOR="heater_generic extruder_bas" MINIMUM=215 MAXIMUM=225
	{% endif %}
	M400
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0 BLUE=1 SYNC=0 TRANSMIT=1
	M83
	G92 E0.0
	G0 E-2 F500
	G92 E0.0
	M82
	{% if printer.pause_resume.is_paused == False %}
		M84
	{% endif %}
	M400
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=1 BLUE=0 SYNC=0 TRANSMIT=1

[gcode_macro ETALONNAGE_USINE]
description: Etalonnage complet de la machine, Parallélisme + Surface + Chauffe tête + Chauffe lit.
gcode:
	SET_LED LED="Eclairage_LEDs" RED=1 GREEN=0.23 BLUE=0 SYNC=0 TRANSMIT=1
	M117 Homing
	G28
	M117 PARALLELISME
	QUAD_GANTRY_LEVEL
	M117 CHAUFFAGE DU LIT
	M190 S60
	M117 ETALONNAGE SURFACE
	BED_MESH_CALIBRATE PROFILE=default
	M117 PID TETE A 220°
	PID_CALIBRATE HEATER=extruder TARGET=220
	PID_CALIBRATE HEATER=extruder_bas TARGET=220
	M117 PID LIT A 80°
	PID_CALIBRATE HEATER=heater_bed TARGET=80
	SAVE_CONFIG

[gcode_macro ETALONNAGE_LIT]
description: Etalonnage complet du lit.
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Etalonnage du lit"
    RESPOND TYPE=command MSG="action:prompt_text Etalonner à quel température ?"
    RESPOND TYPE=command MSG="action:prompt_footer_button A FROID|ETALONNAGE_SURFACE TEMPERATURE_LIT=0|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button A 50°C|ETALONNAGE_SURFACE TEMPERATURE_LIT=50|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button A 60°C|ETALONNAGE_SURFACE TEMPERATURE_LIT=60|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button A 90°C|ETALONNAGE_SURFACE TEMPERATURE_LIT=90|primary"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro ETALONNAGE_SURFACE]
description: Etalonnage de Surface du lit.
gcode:
	SET_LED LED="Eclairage_LEDs" RED=1 GREEN=0.23 BLUE=0 SYNC=0 TRANSMIT=1
    RESPOND TYPE=command MSG=action:prompt_end
	G28
	{% if params.TEMPERATURE_BUSE is defined %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET={params.TEMPERATURE_BUSE|int}
		SET_HEATER_TEMPERATURE HEATER=extruder_bas TARGET={params.TEMPERATURE_BUSE|int}
		TEMPERATURE_WAIT SENSOR="extruder"
		TEMPERATURE_WAIT SENSOR="heater_generic extruder_bas"
	{% else %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
		SET_HEATER_TEMPERATURE HEATER=extruder_bas TARGET=180
		TEMPERATURE_WAIT SENSOR="extruder" MINIMUM=175 MAXIMUM=185
		TEMPERATURE_WAIT SENSOR="heater_generic extruder_bas" MINIMUM=175 MAXIMUM=185
	{% endif %}
	{% if params.TEMPERATURE_LIT is defined %}
		M117 Chauffage du lit
		M190 S{params.TEMPERATURE_LIT|int}
	{% endif %}
	M400
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0 BLUE=1 SYNC=0 TRANSMIT=1
	M117 Etalonnage parallelisme
	QUAD_GANTRY_LEVEL
	M117 Etalonnage de surface
	BED_MESH_CALIBRATE PROFILE=default
	TURN_OFF_HEATERS
	G0 Z50 F900
	M117 Etalonnage terminee
	M400
	SAVE_CONFIG

[gcode_macro ETALONNAGE_PARALLELISME]
description: Etalonnage du parallélisme des 4 axes Z.
gcode:
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0 BLUE=1 SYNC=0 TRANSMIT=1
	M117 Etalonnage parallelisme
	G28
	QUAD_GANTRY_LEVEL
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=1 BLUE=0 SYNC=0 TRANSMIT=1
	M117 Etalonnage parallelisme terminee

[gcode_macro CALIBRATION_PID_TETE]
description: Calibration de la chauffe de la tête (PID : important).
gcode:
	{% if params.TEMPERATURE_BUSE is defined %}
		PID_CALIBRATE HEATER=extruder TARGET={params.TEMPERATURE_BUSE|int}
		PID_CALIBRATE HEATER=extruder_bas TARGET={params.TEMPERATURE_BUSE|int}
	{% else %}
		PID_CALIBRATE HEATER=extruder TARGET=220
		PID_CALIBRATE HEATER=extruder_bas TARGET=220
	{% endif %}
	M117 Calibration du PID de la tete en cours, veuillez patienter...
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0 BLUE=1 SYNC=0 TRANSMIT=1
	SAVE_CONFIG

[gcode_macro CALIBRATION_PID_LIT]
description: Calibration de la chauffe du lit (PID : important).
gcode:
	M117 Calibration de la chauffe du lit en cours, veuillez patienter...
	SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0 BLUE=1 SYNC=0 TRANSMIT=1
	PID_CALIBRATE HEATER=heater_bed TARGET=80
	SAVE_CONFIG

[gcode_macro COUPER_LES_CHAUFFES]
description: Coupe toutes les chauffes extrudeur et lit.
gcode:
	TURN_OFF_HEATERS

[gcode_macro Palpeur_ON]
description: Sortir le palpeur
gcode:
	SET_PIN PIN=Palpeur VALUE=1 # Probe deploy command

[gcode_macro Palpeur_OFF]
description: Rentrer le palpeur
gcode:
	SET_PIN PIN=Palpeur VALUE=0 # Probe stow command

[gcode_macro CALIBRATION_ZERO_VIBRATION]
#description: Lancer une calibration de l'Input Shaping avec l'accéléromètre. ATTENTION : ne pas lancer cette procédure trop souvent, la machine étant soumise à de fortes vibrations durant le test.
description: La calibration Input Shaping n'est pas disponible sur les PELLETS pour le moment. 
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Input Shaping"
    RESPOND TYPE=command MSG="action:prompt_text La calibration Input Shaping n'est pas disponible sur les PELLETS pour le moment."
    RESPOND TYPE=command MSG="action:prompt_footer_button OK|CLOSE_PROMPT|primary"
    RESPOND TYPE=command MSG="action:prompt_show"
	#SET_LED LED="Eclairage_LEDs" RED=1 GREEN=0.23 BLUE=0 SYNC=0 TRANSMIT=1
	#M117 Calibration de l'anti-vibration avec l'accelerometre en cours...
	#G28
	#G1 Z20
	#G4 S5
	#M400
	#SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0 BLUE=1 SYNC=0 TRANSMIT=1
	#SHAPER_CALIBRATE AXIS=X
	#SHAPER_CALIBRATE AXIS=Y
	#SAVE_CONFIG

[gcode_macro CLOSE_PROMPT]
gcode:
	RESPOND TYPE=command MSG=action:prompt_end

[gcode_macro ETEINDRE_MOTEURS]
description: Eteindre les moteurs qui sont sous tension.
gcode:
	M84

[gcode_macro M117]
rename_existing: M117.1
gcode:
	{% if rawparams %}
		{% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
		SET_DISPLAY_TEXT MSG="{escaped_msg}"
		RESPOND TYPE=command MSG="{escaped_msg}"
	{% else %}
		SET_DISPLAY_TEXT
	{% endif %}
    UPDATE_DELAYED_GCODE ID=M117_CLEAR DURATION=120

[delayed_gcode M117_CLEAR]
gcode:
    SET_DISPLAY_TEXT MSG=""
    
[idle_timeout]
timeout: 300
gcode:
	{% if printer.pause_resume.is_paused == True %}
		#{% set ntemp = printer.extruder.temperature %}
		#{% if ntemp > 101 %}
		#	M104 S100
		#{% endif %}
		#M117 Extrudeur mis en veille...
	{% else %}
		M117 Timeout, arrêt des moteurs et des chauffes.
		TURN_OFF_HEATERS
		M84
		SET_LED LED="Eclairage_LEDs" RED=0 GREEN=0.2 BLUE=0 SYNC=0 TRANSMIT=1
	{% endif %}

[delayed_gcode manage_fans]
initial_duration: 0.1
gcode:
	{% set sysstate = printer["idle_timeout"] %}
	#{% if sysstate.state == "Printing" %}
		{% set chambersensor = printer["temperature_sensor Chambre"] %}
		{% set capotfanspeed = (chambersensor.temperature*2.3)/100 %}
		{% if capotfanspeed > 1 %}
			{% set capotfanspeed = 1 %}
		{% endif %}
		{% if capotfanspeed < 0 %}
			{% set capotfanspeed = 0 %}
		{% endif %}
		SET_FAN_SPEED FAN=_Capot SPEED={capotfanspeed}
	#{% endif %}
	{% set alimsensor = printer["temperature_sensor Alimentation"] %}
	{% set alimfanspeed = (alimsensor.temperature)/100 %}
	{% if alimfanspeed > 1 %}
		{% set alimfanspeed = 1 %}
	{% endif %}
	{% if alimfanspeed < 0.25 %}
		{% set alimfanspeed = 0.25 %}
	{% endif %}
	SET_FAN_SPEED FAN=_Alimentation SPEED={alimfanspeed}
	UPDATE_DELAYED_GCODE ID=manage_fans DURATION=5

[delayed_gcode load_bedmesh]
initial_duration: 1
gcode:
	BED_MESH_PROFILE LOAD=default

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  SET_LED LED="Eclairage_LEDs" RED=1 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1
  _CLIENT_RETRACT LENGTH={retract}
  TURN_OFF_HEATERS
  M107
  # clear pause_next_layer and pause_at_layer as preparation for next print
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{'enable': False, 'call':"PAUSE"}}"
  SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{'enable': False, 'layer': 0, 'call':"PAUSE"}}"
  CANCEL_PRINT_BASE
  CLEAR_PAUSE
  G28 X Y
  M84

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
	{% if printer.pause_resume.is_paused == False %}
		PAUSE_BASE
		SAVE_GCODE_STATE NAME=pausesave
		G91
		G1 Z25 F600
		G90
		RESTORE_GCODE_STATE NAME=pausesave
	{% else %}
		{action_respond_info("Déjà en pause...")}
	{% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
	SET_GCODE_VARIABLE MACRO=M600 VARIABLE=m600pending VALUE=0
	RESUME_BASE
	SET_LED LED="Eclairage_LEDs" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
	M117 Impression

[gcode_macro SAVE_CONFIG]
rename_existing: SAVE_CONFIG_BASE
gcode:
	FIRMWARE_RESTART
	SAVE_CONFIG_BASE

# Usage: SET_PAUSE_NEXT_LAYER [MACRO=<name>]
[gcode_macro PAUSE_PROCHAINE_COUCHE]
description: Enable a pause if the next layer is reached
gcode:
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{'enable':True, 'call':params.MACRO|default("PAUSE")}}"

# Usage: SET_PAUSE_AT_LAYER [LAYER=<number>] [MACRO=<name>]
[gcode_macro PAUSE_A_LA_COUCHE]
description: Enable/disable a pause if a given layer number is reached
gcode:
	{% if params.LAYER is defined %}
		SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{'enable': True, 'layer':params.LAYER|int, 'call':params.MACRO|default("PAUSE")}}"
	{% else %}
		SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{'enable': False, 'layer':0, 'call':"PAUSE"}}"
	{% endif %}

# Usage: SET_PRINT_STATS_INFO [TOTAL_LAYER=<total_layer_count>] [CURRENT_LAYER= <current_layer>]
[gcode_macro SET_PRINT_STATS_INFO]
rename_existing: SET_PRINT_STATS_INFO_BASE
description: Overwrite, to get pause_next_layer and pause_at_layer feature 
variable_pause_next_layer: {'enable':False, 'call':"PAUSE"}
variable_pause_at_layer  : {'enable':False, 'layer':0, 'call':"PAUSE"}
gcode:
  {% if pause_next_layer.enable %}
    {action_respond_info("%s, forced by pause_next_layer" % pause_next_layer.call)}
    {pause_next_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{'enable': False, 'call':"PAUSE"}}"
  {% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
    {action_respond_info("%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer))}
    {pause_at_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
    SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{'enable': False, 'layer': 0, 'call':"PAUSE"}}"
  {% endif %}
  SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _CLIENT_EXTRUDE]
description: Extrudes, if the extruder is hot enough
gcode:
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %}

  {% set length = (params.LENGTH|float) if params.LENGTH is defined
             else 1.0 if not macro_found
             else client.unretract|default(1.0) %}

  {% set speed = params.SPEED if params.SPEED is defined
            else 35 if not macro_found
            else client.speed_unretract|default(35) %}

  {% set absolute_extrude = printer.gcode_move.absolute_extrude %}

  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      {% if length < 0 %}
        G10
      {% else %}
        G11
      {% endif %}
    {% else %}
      M83
      G1 E{length} F{(speed|float|abs) * 60}
      {% if absolute_extrude %}
        M82
      {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

[gcode_macro _CLIENT_RETRACT]
description: Retracts, if the extruder is hot enough
gcode:
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}

  {% set length = (params.LENGTH|float) if params.LENGTH is defined
             else 1.0 if not macro_found
             else client.retract|default(1.0) %}

  {% set speed = params.SPEED if params.SPEED is defined
            else 35 if not macro_found
            else client.speed_retract|default(35) %}

  _CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[pause_resume]

[display_status]

